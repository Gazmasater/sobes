basePath: /
definitions:
  models.Person:
    properties:
      age:
        type: integer
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing people.
  title: People API
  version: "1.0"
paths:
  /people:
    get:
      consumes:
      - application/json
      description: Возвращает список людей с возможностью фильтрации по полу и национальности,
        а также с пагинацией
      parameters:
      - description: Пол (например, male, female)
        in: query
        name: gender
        type: string
      - description: Национальность (например, Russian, American)
        in: query
        name: nationality
        type: string
      - description: Количество возвращаемых записей (по умолчанию 10)
        in: query
        name: limit
        type: integer
      - description: Смещение (offset) для пагинации
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Person'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список людей
      tags:
      - people
    post:
      consumes:
      - application/json
      description: Add person by JSON
      parameters:
      - description: Person
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new person
      tags:
      - people
  /people/{id}:
    delete:
      description: Удаляет запись человека по ID
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить человека
      tags:
      - people
    put:
      consumes:
      - application/json
      description: Обновляет информацию о человеке по ID
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённые данные
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить данные человека
      tags:
      - people
swagger: "2.0"
